<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="s.game.models.SymbolConfig"/>
    <fullyQualifiedTypeName name="s.game.models.ProbabilityConfig"/>
    <fullyQualifiedTypeName name="s.game.models.WinCombinationConfig"/>
    <fullyQualifiedTypeName name="java.util.stream.Collector"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="s.game.models.Symbol"/>
    <fullyQualifiedTypeName name="s.game.models.Matrix"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="org.json.JSONArray"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="s.game.service.ScratchGameService"/>
    <fullyQualifiedTypeName name="s.game.service.impl.ScratchGameServiceImpl"/>
    <fullyQualifiedTypeName name="s.game.util.JsonUtils"/>
    <fullyQualifiedTypeName name="java.io.File"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="java.nio.file.Files"/>
    <fullyQualifiedTypeName name="java.nio.file.Paths"/>
    <fullyQualifiedTypeName name="java.io.InputStream"/>
    <fullyQualifiedTypeName name="java.io.BufferedReader"/>
    <fullyQualifiedTypeName name="java.io.InputStreamReader"/>
    <fullyQualifiedTypeName name="java.lang.NumberFormatException"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="org.json.JSONException"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="org.json.JSONObject"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
</qualifiedTypeNameHistroy>
